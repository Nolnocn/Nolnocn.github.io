// Generated by Haxe 3.4.0
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var client_JsClient = function() {
	var btn = js_Boot.__cast(window.document.getElementById("connectBtn") , HTMLButtonElement);
	btn.onclick = $bind(this,this.onButtonClick);
};
client_JsClient.__name__ = true;
client_JsClient.main = function() {
	var client1 = new client_JsClient();
};
client_JsClient.prototype = {
	onButtonClick: function() {
		var textbox = js_Boot.__cast(window.document.getElementById("ipTxtBox") , HTMLInputElement);
		this.m_cnx = new client_comm_cnx_SocketConnection(textbox.value,5000);
		console.log(textbox.value);
		window.document.body.innerHTML = "";
	}
	,__class__: client_JsClient
};
var shared_comm_cnx_IConnection = function() { };
shared_comm_cnx_IConnection.__name__ = true;
shared_comm_cnx_IConnection.prototype = {
	__class__: shared_comm_cnx_IConnection
};
var client_comm_cnx_SocketConnection = function(host,port) {
	this.attemptConnection(host,port);
};
client_comm_cnx_SocketConnection.__name__ = true;
client_comm_cnx_SocketConnection.__interfaces__ = [shared_comm_cnx_IConnection];
client_comm_cnx_SocketConnection.prototype = {
	send: function(data) {
		this.m_socket.send(data);
	}
	,getSocket: function() {
		return this.m_socket;
	}
	,attemptConnection: function(host,port) {
		var _gthis = this;
		console.log("Attempting Connection");
		this.m_socket = client_comm_socket_SocketUtil.createSocket();
		this.m_socket.connect(host,port);
		haxe_Timer.delay(function() {
			_gthis.checkConnection(host,port);
		},3000);
	}
	,checkConnection: function(host,port) {
		if(!this.m_socket.isConnected()) {
			console.log("Failed to connect...");
			this.attemptConnection(host,port);
		}
	}
	,__class__: client_comm_cnx_SocketConnection
};
var client_comm_socket_ISocket = function() { };
client_comm_socket_ISocket.__name__ = true;
client_comm_socket_ISocket.prototype = {
	__class__: client_comm_socket_ISocket
};
var client_comm_socket_JsSocket = function() {
	this.m_connected = false;
};
client_comm_socket_JsSocket.__name__ = true;
client_comm_socket_JsSocket.__interfaces__ = [client_comm_socket_ISocket];
client_comm_socket_JsSocket.prototype = {
	connect: function(host,port) {
		this.m_socketImpl = new WebSocket("ws://" + host + ":" + port + "/");
		this.setupEventListeners();
	}
	,send: function(data) {
		this.m_socketImpl.send(data);
	}
	,close: function() {
		this.m_socketImpl.close();
	}
	,onConnect: function() {
		console.log("Open");
	}
	,onClose: function() {
		console.log("Close");
	}
	,onData: function(data) {
		console.log("Data: " + data);
	}
	,onError: function(e) {
		console.log("Error");
	}
	,setupEventListeners: function() {
		var _gthis = this;
		this.m_socketImpl.onopen = function(e) {
			_gthis.m_connected = true;
			_gthis.onConnect();
			console.log(e);
		};
		this.m_socketImpl.onclose = function(e1) {
			_gthis.onClose();
			console.log(e1);
		};
		this.m_socketImpl.onmessage = function(e2) {
			_gthis.onData("Message");
			console.log(e2);
		};
		this.m_socketImpl.onerror = function(e3) {
			_gthis.onError(null);
			console.log(e3);
		};
	}
	,isConnected: function() {
		return this.m_connected;
	}
	,__class__: client_comm_socket_JsSocket
};
var client_comm_socket_SocketUtil = function() { };
client_comm_socket_SocketUtil.__name__ = true;
client_comm_socket_SocketUtil.createSocket = function() {
	return new client_comm_socket_JsSocket();
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
js_Boot.__toStr = ({ }).toString;
client_JsClient.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
